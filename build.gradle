/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

apply plugin: 'io.qameta.allure'

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    implementation group: 'io.appium', name: 'java-client', version: '7.2.0'
    implementation 'org.jsoup:jsoup:1.12.1'
	implementation 'net.sourceforge.htmlunit:htmlunit:2.36.0'
	implementation 'com.google.code.gson:gson:2.8.5'
 
}

allure {
    autoconfigure = true
    version = '2.4.1'

    
}

test {
    reports {
        junitXml.enabled = false
        junitXml.destination = file("$buildDir/xml")
        html.enabled = true
        html.destination = file("$buildDir/html")
    }      
     testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }         
}

task allure_report {
    group 'verification'
    description 'Generates a report'

    doLast {
        allureServe
    }
}

